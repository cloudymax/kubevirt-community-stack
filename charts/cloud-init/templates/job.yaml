---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.secret_name }}-cloud-init-job
  namespace: {{ .Values.namespace }}
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      {{- if eq .Values.serviceAccount.create true }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- if eq .Values.serviceAccount.create false }}
      serviceAccountName: {{ .Values.serviceAccount.existingServiceAccountName }}
      {{- end }}
      containers:
        - name: cloud-init
          image: {{ .Values.image }}
          env:
          - name: ARGOCD_APP_NAME
            value: {{ .Values.argocdAppName }}
          - name: NAMESPACE
            value: {{ .Values.namespace }}
          - name: SECRET_NAME
            value: {{ .Values.secret_name }}
          - name: USER_DATA_SECRET_PATH
            value: /secrets/user-data.yaml
          - name: USER_DATA_PATH
            value: /user-data.yaml
          - name: NETWORK_DATA_SECRET_PATH
            value: /secrets/network-data.yaml
          - name: NETWORK_DATA_PATH
            value: /network-data.yaml
          - name: SALT
            value: {{ .Values.salt }}
 	  {{- range $reg, $props := .Values.users }}
          {{- if $props.password.existingSecret }}
          - name: {{ upper $props.name }}_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $props.password.existingSecret.name }}
                key: {{ $props.password.existingSecret.key }}
	  {{- end }}
          {{- if $props.password.random }}
          - name: RANDOM_PASSWORD
            value: "true"
	  {{- end }}
	  {{- end }}
          {{- with .Values.extraEnvVars }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if eq .Values.envsubst true }}
          - name: ENVSUBST
            value: "true"
	  {{- end }}
          {{- if .Values.debug }}
          command: ["/bin/sleep", "365d"]
          {{- else }}
          command: ["/bin/bash", "/optimize.sh"]
          {{- end }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
             cpu: 250m
             memory: 512M
            requests:
              cpu: 250m
              memory: 512M
          volumeMounts:
            - name: userdata
              mountPath: /secrets/user-data.yaml
              subPath: user-data.yaml
            {{- if .Values.networkData.enabled }}
            - name: networkdata
              mountPath: /secrets/network-data.yaml
              subPath: network-data.yaml
            {{- end }}
            - name: optimizer-script
              mountPath: /optimize.sh
              subPath: optimize.sh
            {{- if .Values.wireguard }}
            {{- range $reg, $props := .Values.wireguard.interfaces }}
            - name: {{ $props.name }}
              mountPath: /secrets
              readOnly: true
            {{- end }}
            {{- end }}
      volumes:
        - name: userdata
          configMap:
            name: {{ .Values.secret_name }}-userdata
            items:
              - key: user-data.yaml
                path: user-data.yaml
        {{- if .Values.networkData.enabled }}
        - name: networkdata
          configMap:
            name: {{ .Values.hostname }}-userdata
            items:
              - key: network-data.yaml
                path: network-data.yaml
        {{- end }}
        - name: optimizer-script
          configMap:
            name: {{ .Values.secret_name }}-optimizer-script
        {{- if .Values.wireguard }}
        {{- range $reg, $props := .Values.wireguard.interfaces }}
        - name: {{ $props.name }}
          secret:
            secretName: {{ $props.existingSecret.name }}
            items:
            - key: {{ $props.existingSecret.key }}
              path: {{ $props.name }}.conf
        {{- end }}
        {{- end }}
