###############################################################
#  ____ _           _
# / ___| |_   _ ___| |_ ___ _ __
#| |   | | | | / __| __/ _ \ '__|
#| |___| | |_| \__ \ ||  __/ |
# \____|_|\__,_|___/\__\___|_|
#
###############################################################
cluster:
  # -- Name of the cluster to create
  name: capi

  # -- Choose which provider to use when creating the cluster
  # One of: kubeadm, k3s, rke2
  provider: k3s

  # -- Version of kubernetes to deploy
  # v1.32.1+rke2r1
  # v1.32.1+k3s1
  version: v1.32.1+k3s1

  # -- Namespace in which to host cluster components
  namespace: default

  # -- Cluster internal DNS domain
  dnsDomain: cluster.local

  # -- Disable the deployment of kube-proxy
  disableKubeProxy: false

  # -- CIDR block for pod network
  podCidrBlock: "10.243.0.0/16"

  # -- CIDR block for services
  serviceCidrBlock: "10.95.0.0/16"

  # -- Type of service to use when exposing control plane endpoint on Host
  controlPlaneServiceType: ClusterIP

  # -- Extra args to pass to kubelet
  kubeletExtraArgs:
    kube-reserved: cpu=1,memory=2Gi,ephemeral-storage=1Gi
    system-reserved: cpu=500m,memory=1Gi,ephemeral-storage=1Gi
    eviction-hard: memory.available<500Mi,nodefs.available<10%

###############################################################
# __     ____  __   ____             _
# \ \   / /  \/  | |  _ \ ___   ___ | |___
#  \ \ / /| |\/| | | |_) / _ \ / _ \| / __|
#   \ V / | |  | | |  __/ (_) | (_) | \__ \
#    \_/  |_|  |_| |_|   \___/ \___/|_|___/
###############################################################
# -- Control Plane VM pool spec
controlPlane:
  size: 1
  bootstrapCheck: ssh
  role: worker
  virtualMachine:
    # -- One of 'Always' `RerunOnFailure` `Manual` `Halted` `Once`
    # See: https://kubevirt.io/user-guide/compute/run_strategies/#runstrategy
    runStrategy: "Always"
    features:
      # -- Enable KVM acceleration.
      # Setting the 'hidden' flag to `true` will obscure kvm from the host.
      # Set `hidden` to `false` when using vGPU in Windows Guests.
      kvm:
        enabled: true
        hidden: false
      # -- Set default hyperv settings for windows guests
      hyperv: false
      # Enable ACPI platform event device
      acpiEnabled: true
      # -- Make pod network interface the default for the VM
      autoattachPodInterface: true
      # -- Attach a serial console device
      autoattachSerialConsole: true
      # -- Attach a basic graphics device for VNC access
      autoattachGraphicsDevice: true
      # -- Enhances network performance by allowing multiple TX and RX queues.
      networkInterfaceMultiqueue: true
    # -- Options for machine clock
    clock:
      enabled: true
      # -- Set clock timezone eg: "Europe/Amsterdam" or "utc"
      timezone: utc
      # -- High Precision Event Timer
      hpet:
        enabled: true
        present: false
      # -- Programmable interval timer
      pit:
        enabled: true
        tickPolicy: delay
      # -- Real-Time Clock
      rtc:
        enabled: true
        tickPolicy: catchup
      # -- Paravirtualized clock that provides better accuracy and performance.
      # Recommended clock source for KVM guest virtual machines.
      kvm: true
      # -- Hyper-V's reference time counter for use with Windows guests.
      hyperv: false
    firmware:
      # Enable System Management Mode (required for secureboot)
      smmEnabled: false
      # -- Enable EFI bios and secureboot
      efi:
        enabled: true
        secureBoot: false
      uuid: 5d307ca9-b3ef-428c-8861-06e72d69f223
    machine:
      # -- If a Pod cannot be scheduled, lower priorityClass Pods will be evicted
      priorityClassName: vm-standard
      # -- Define CPU, RAM, GPU, HostDevice settings for VMs.
      # Overrides: vCores, memory, gpus
      instancetype:
        enabled: false
        name: standard-small
        kind: virtualMachineClusterInstancetype
      # -- System Arch. Supported options are amd64 and arm64
      architecture: amd64
      # -- QEMU virtual-machine type. Options are q35 and i440fx
      machineType: q35
      # -- Specify hots-passthrough or a named cpu model
      # https://www.qemu.org/docs/master/system/qemu-cpu-models.html
      cpuModel: host-passthrough
      # -- Number of simulated CPU sockets.
      # Note: Multiple cpu-bound microbenchmarks show a significant
      # performance advantage when using sockets instead of cores
      # Does not work with some cpuManagerPolicy options.
      sockets: 1
      # -- Number of Virtual cores to pass to the Guest
      # ignored when instancetype is defined
      vCores: 2
      # -- Enable simulation of Hyperthre ading on Intel CPUs or SMT AMD CPUs.
      threads: 1
      # -- Pin QEMU process threads to specific physical cores
      # Requires `--cpu-manager-policy` enabled in kubelet
      pinCores: true
      # -- In order to enhance the real-time support in KubeVirt and provide
      # improved latency, KubeVirt will allocate an additional dedicated CPU,
      # exclusively for the emulator thread, to which it will be pinned.
      # Requires `dedicatedCpuPlacement` set to `true`
      emulatorThread: false
      # -- Amount of RAM to pass to the Guest. Ignored when instancetype is defined
      memory:
        base: 2Gi
        overcommit:
          # -- Enable memory overcommitment. Tells VM it has more RAM than requested.
          # VMI becomes Burtable QOS class and may be preempted when node is under memory pressure.
          # GPU passthrough and vGPU will not function with overcommit enabled.
          enabled: false
          limit: 4Gi
          # -- Do not allocate hypervisor overhead memory to VM. Will work for as
          # long as most of the VirtualMachineInstances do not request the full memory.
          overhead: false
      # -- GPUs to pass to guest, requires that the GPUs are pre-configured in the
      # kubevirt custom resource. ignored when instancetype is defined.
      # ramFB & display may only be enabled on 1 vGPU
      gpus: []
      # - name: gpu0
      #   deviceName: nvidia.com/GRID_RTX6000-4Q
      #   virtualGPUOptions:
      #     display:
      #       enabled: true
      #       ramFB:
      #         enabled: true

      # -- virtual network interface config options.
      # See: https://kubevirt.io/user-guide/network/interfaces_and_networks/#interfaces
      interfaces:
        # -- bridge mode, vms are connected to the network via a linux "bridge".
        # Pod network IP is delegated to vm via DHCPv4. VM must use DHCP for an IP
        - masquerade: {}
          name: default
          model: virtio
      networks:
        # Use the default pod network
        - name: default
          pod: {}
  diskErrorPolicy: "report"
  disks:
    - name: harddrive
      type: disk
      bus: virtio
      bootorder: 1
      readonly: false
      image: quay.io/capk/ubuntu-2404-container-disk:v1.32.1


#-- Worker VM spec
workers:
  size: 1
  bootstrapCheck: ssh
  role: worker

  virtualMachine:
    # -- One of 'Always' `RerunOnFailure` `Manual` `Halted` `Once`
    # See: https://kubevirt.io/user-guide/compute/run_strategies/#runstrategy
    runStrategy: "Always"

    features:
      # -- Enable KVM acceleration.
      # Setting the 'hidden' flag to `true` will obscure kvm from the host.
      # Set `hidden` to `false` when using vGPU in Windows Guests.
      kvm:
        enabled: true
        hidden: false

      # -- Set default hyperv settings for windows guests
      hyperv: false

      # Enable ACPI platform event device
      acpiEnabled: true

      # -- Make pod network interface the default for the VM
      autoattachPodInterface: true

      # -- Attach a serial console device
      autoattachSerialConsole: true

      # -- Attach a basic graphics device for VNC access
      autoattachGraphicsDevice: true

      # -- Enhances network performance by allowing multiple TX and RX queues.
      networkInterfaceMultiqueue: true

    # -- Options for machine clock
    clock:
      enabled: true

      # -- Set clock timezone eg: "Europe/Amsterdam" or "utc"
      timezone: utc

      # -- High Precision Event Timer
      hpet:
        enabled: true
        present: false

      # -- Programmable interval timer
      pit:
        enabled: true
        tickPolicy: delay

      # -- Real-Time Clock
      rtc:
        enabled: true
        tickPolicy: catchup

      # -- Paravirtualized clock that provides better accuracy and performance.
      # Recommended clock source for KVM guest virtual machines.
      kvm: true

      # -- Hyper-V's reference time counter for use with Windows guests.
      hyperv: false

    firmware:
      # Enable System Management Mode (required for secureboot)
      smmEnabled: false

      # -- Enable EFI bios and secureboot
      efi:
        enabled: true
        secureBoot: false
      uuid: 5d307ca9-b3ef-428c-8861-06e72d69f223

    machine:
      # -- If a Pod cannot be scheduled, lower priorityClass Pods will be evicted
      priorityClassName: vm-standard

      # -- Define CPU, RAM, GPU, HostDevice settings for VMs.
      # Overrides: vCores, memory, gpus
      instancetype:
        enabled: false
        name: standard-small
        kind: virtualMachineClusterInstancetype

      # -- System Arch. Supported options are amd64 and arm64
      architecture: amd64

      # -- QEMU virtual-machine type. Options are q35 and i440fx
      machineType: q35

      # -- Specify hots-passthrough or a named cpu model
      # https://www.qemu.org/docs/master/system/qemu-cpu-models.html
      cpuModel: host-passthrough

      # -- Number of simulated CPU sockets.
      # Note: Multiple cpu-bound microbenchmarks show a significant
      # performance advantage when using sockets instead of cores
      # Does not work with some cpuManagerPolicy options.
      sockets: 1

      # -- Number of Virtual cores to pass to the Guest
      # ignored when instancetype is defined
      vCores: 2

      # -- Enable simulation of Hyperthre ading on Intel CPUs or SMT AMD CPUs.
      threads: 1

      # -- Pin QEMU process threads to specific physical cores
      # Requires `--cpu-manager-policy` enabled in kubelet
      pinCores: true

      # -- In order to enhance the real-time support in KubeVirt and provide
      # improved latency, KubeVirt will allocate an additional dedicated CPU,
      # exclusively for the emulator thread, to which it will be pinned.
      # Requires `dedicatedCpuPlacement` set to `true`
      emulatorThread: false

      # -- Amount of RAM to pass to the Guest. Ignored when instancetype is defined
      memory:
        base: 2Gi
        overcommit:
          # -- Enable memory overcommitment. Tells VM it has more RAM than requested.
          # VMI becomes Burtable QOS class and may be preempted when node is under memory pressure.
          # GPU passthrough and vGPU will not function with overcommit enabled.
          enabled: false
          limit: 4Gi

          # -- Do not allocate hypervisor overhead memory to VM. Will work for as
          # long as most of the VirtualMachineInstances do not request the full memory.
          overhead: false

      # -- GPUs to pass to guest, requires that the GPUs are pre-configured in the
      # kubevirt custom resource. ignored when instancetype is defined.
      # ramFB & display may only be enabled on 1 vGPU
      gpus: []
      # - name: gpu0
      #   deviceName: nvidia.com/GRID_RTX6000-4Q
      #   virtualGPUOptions:
      #     display:
      #       enabled: true
      #       ramFB:
      #         enabled: true

      # -- virtual network interface config options.
      # See: https://kubevirt.io/user-guide/network/interfaces_and_networks/#interfaces
      interfaces:
      # -- bridge mode, vms are connected to the network via a linux "bridge".
      # Pod network IP is delegated to vm via DHCPv4. VM must use DHCP for an IP
        - masquerade: {}
          name: default
          model: virtio

      networks:
      # Use the default pod network
      - name: default
        pod: {}

  diskErrorPolicy: "report"

  disks:
    - name: harddrive
      type: disk
      bus: virtio
      bootorder: 1
      readonly: false
      image: quay.io/capk/ubuntu-2404-container-disk:v1.32.1



###############################################################
# _   _      _              ____ _                _
#| | | | ___| |_ __ ___    / ___| |__   __ _ _ __| |_ ___
#| |_| |/ _ \ | '_ ` _ \  | |   | '_ \ / _` | '__| __/ __|
#|  _  |  __/ | | | | | | | |___| | | | (_| | |  | |_\__ \
#|_| |_|\___|_|_| |_| |_|  \____|_| |_|\__,_|_|   \__|___/
###############################################################
helmCharts: []
  # Helm Chart for Cilium CNI
  # - name: cilium
  #   namespace: kube-system
  #   repoUrl: https://helm.cilium.io/
  #   options:
  #     waitForJobs: true
  #     wait: true
  #     timeout: 5m
  #     install:
  #       createNamespace: true
  #   values:
  #     operator:
  #       replicas: 1
  #     encryption:
  #       enabled: false
  #       type: wireguard
  #     hubble:
  #       enabled: true
  #       relay:
  #         enabled: true
  #       ui:
  #         enabled: true

  # - name: cert-manager
  #   repoUrl: https://charts.jetstack.io
  #   namespace: certmanager
  #   options:
  #     waitForJobs: true
  #     wait: true
  #     timeout: 5m
  #     install:
  #       createNamespace: true
  #   values:
  #     crds:
  #       enabled: true

  # - name: metrics-server
  #   repoUrl: https://kubernetes-sigs.github.io/metrics-server/
  #   namespace: kube-system
  #   options:
  #     waitForJobs: true
  #     wait: true
  #     timeout: 5m
  #     install:
  #       createNamespace: true
  #   values:
  #     defaultArgs:
  #       - --cert-dir=/tmp
  #       - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  #       - --kubelet-use-node-status-port
  #       - --metric-resolution=15s
  #     args: []
  #     apiService:
  #       create: true
  #       insecureSkipTLSVerify: true
  #     tls:
  #       type: "metrics-server"

  # - name: ingress-nginx
  #   repoUrl: https://kubernetes.github.io/ingress-nginx
  #   namespace: ingress-nginx
  #   options:
  #     waitForJobs: true
  #     wait: true
  #     timeout: 5m
  #     install:
  #       createNamespace: true

